package SimonDice;

import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class Engine {
	/**
	 * @param clase tColores con los colores
	 */
	public enum tColores {
		Rojo, Azul, Verde, Dorado
	}

	/**
	 * @param secuencia maxima de colores
	 */
	private static final int MAX_COLORES_SEQ = 12;
	tColores[] secuenciaColores = new tColores[MAX_COLORES_SEQ];

	/**
	 * @param _color
	 * @return
	 */
	public tColores charToColor(char _color) {
		Scanner scn = new Scanner(System.in);
		
		switch (Character.toUpperCase(_color)) {
		case 'R':
			return tColores.Rojo;
		case 'A':
			return tColores.Azul;
		case 'V':
			return tColores.Verde;
		case 'D':
			return tColores.Dorado;
		default:
			System.out.println("Incorrect color...");
			System.out.println("Press ENTER to go to the menu.");
			scn.nextLine();
			mostrarMenu(0);
			return null;
		}
	}

	/**
	 * @param _numero
	 * @return
	 */
	public tColores intToColor(int _numero) {
		Scanner scn = new Scanner(System.in);
		
		switch (Character.toUpperCase(_numero)) {
		case 0:
			return tColores.Rojo;
		case 1:
			return tColores.Azul;
		case 2:
			return tColores.Verde;
		case 3:
			return tColores.Dorado;
		default:
			System.out.println("Incorrect color...");
			System.out.println("Press ENTER to go to the menu.");
			scn.nextLine();
			mostrarMenu(0);
			return null;
		}
	}

	/**
	 * 
	 * @param _numColores
	 */
	public void generarSecuencia(int _numColores) {
		Random randomColor = new Random();

		for (int i = 0; i < MAX_COLORES_SEQ; i++) {
			int colorAleatorio = randomColor.nextInt(_numColores + 1);
			secuenciaColores[i] = intToColor(colorAleatorio);
		}
	}

	/**
	 * 
	 * @param _index
	 * @param _color
	 * @return
	 */
	public boolean comprobarColor(int _index, tColores _color) {
		Scanner scn = new Scanner(System.in);
		
		if (secuenciaColores[_index] == (_color))
			return true;
		else
			System.out.println("You failed :(, try again next time");
			System.out.println("Press ENTER to go to the menu.");
			scn.nextLine();
			mostrarMenu(0);
			return false;
	}
	
	/**
	 * @param mostrarSecuencia
	 * @param _numero
	 */

	public void mostrarSecuencia(int _numero) {
	  	Scanner scn = new Scanner(System.in);
		
		int num_color = _numero + 2;
		tColores[] copiaseq = new tColores[num_color]; //COPIA DE LA SECUENCIA DE COLORES PREVIA, SOLO COLORES QUE QUIERO MOSTRAR
		
		for (int i = 0; i < num_color; i++) {
			copiaseq[i] = secuenciaColores[i];
		}
		System.out.print("\nSequence number " + _numero + ": " + Arrays.toString(copiaseq));
		System.out.print("\nMemorize the sequence and press ENTER to continue...");
		scn.nextLine();
		for (int salto = 0; salto < 50; salto++) {
			System.out.println();
		}
	}
	
	public void mostrarMenu(int _menu) {
		Scanner scn = new Scanner(System.in);
		
		for (int salto = 0; salto < 10; salto++) {
			System.out.println();
		}
		
		System.out.println("	        █░");
		System.out.println("█▀▄▀█ █▀▀ █▄░█ █░█");
        System.out.println("█░▀░█ ██▄ █░▀█ █▄█");
        System.out.println("1. Jugar");
        System.out.println("2. Como se juega");
        System.out.println("3. Salir");
        System.out.print("Selecciona una opción: ");
        _menu = scn.nextInt();
        
        if (_menu == 1) {
        	for (int salto = 0; salto < 50; salto++) {
    			System.out.println();
    		}
        	play();
        }else if (_menu == 2) {
        	for (int salto = 0; salto < 50; salto++) {
    			System.out.println();
    		}
        	helpMenu();
        }else if (_menu == 3) {
        	for (int salto = 0; salto < 50; salto++) {
    			System.out.println();
    		}
        	System.out.println("Good bye :(");
        }else {
        	System.out.println("Número no válido, vuelve a seleccionar una opción:");
        	_menu = scn.nextInt();
        	mostrarMenu(0);
           
        }
	}
	
	public void helpMenu() {
		Scanner scn = new Scanner(System.in);
		
		System.out.println("██╗░░██╗███████╗██╗░░░░░██████╗░");
        System.out.println("██║░░██║██╔════╝██║░░░░░██╔══██╗");
        System.out.println("███████║█████╗░░██║░░░░░██████╔╝");
        System.out.println("██╔══██║██╔══╝░░██║░░░░░██╔═══╝░");
        System.out.println("██║░░██║███████╗███████╗██║░░░░░");
        System.out.println("╚═╝░░╚═╝╚══════╝╚══════╝╚═╝░░░░░");
        
        System.out.println("Bienvenido al apartado de ayuda:");
        System.out.println("Una vez se haya generado la primera secuencia, se te monstraran 3 colores los cuales tendras que memorizar,");
        System.out.println("el juego pedira que presiones el ENTER. Una vez presionado tendrás que introducir de forma individual los ");
        System.out.println("colores y presionar ENTER, a continuacion se le mostrara un ejemplo:");
        System.out.println("Sequence number 1: [Azul, Rojo, Verde]");
        System.out.println("A / a");
        System.out.println("R / r");
        System.out.println("V / v");
        System.out.println("\nUna vez acertada la secuencia se le mostrara un color mas a la secuenciay deberá seguir los mismos pasos ");
        System.out.println("anteriromente mencionados. Disfruta el juego :D");
        System.out.println("\nPress ENTER to go back to the menu.");
        scn.nextLine();
        
        mostrarMenu(0);
	}
	/**
	 * @param Creacion del método start
	 */
	  public void start() {
		  	Scanner scn = new Scanner(System.in);
		  	
	        System.out.println("Welcome to...");
			System.out.println("			  ██");
			System.out.println("			  █░");
			System.out.println("			   ");
			System.out.println("░██████╗██╗███╗░░░███╗░█████╗░███╗░░██╗  ██████╗░██╗░█████╗░███████╗");
			System.out.println("██╔════╝██║████╗░████║██╔══██╗████╗░██║  ██╔══██╗██║██╔══██╗██╔════╝");
			System.out.println("╚█████╗░██║██╔████╔██║██║░░██║██╔██╗██║  ██║░░██║██║██║░░╚═╝█████╗░░");
			System.out.println("░╚═══██╗██║██║╚██╔╝██║██║░░██║██║╚████║  ██║░░██║██║██║░░██╗██╔══╝░░");
			System.out.println("██████╔╝██║██║░╚═╝░██║╚█████╔╝██║░╚███║  ██████╔╝██║╚█████╔╝███████╗");
			System.out.println("╚═════╝░╚═╝╚═╝░░░░░╚═╝░╚════╝░╚═╝░░╚══╝  ╚═════╝░╚═╝░╚════╝░╚══════╝");
			
			System.out.print("\nWhat is your name?" ); // Aqui se instancia el objeto jugador
			Jugador player = new Jugador(scn.nextLine());
			System.out.print(player.getNombre());
			scn.nextLine();
			/**
			 * @param Menu de Simon Dice
			 */	
			mostrarMenu(0);
	  }
	  
			public void play() {
			  	Scanner scn = new Scanner(System.in);
			  	
    			int i = 1;
    			int nivel = i + 2;
    			generarSecuencia(3);
    			
    			do {
    				mostrarSecuencia(i);
    				nivel = i + 2;
    				
    				for (int h = 0; h < nivel; h++) {
    					char color_char = new Scanner(System.in).next().charAt(0);
    					tColores color_select = charToColor(color_char);
    					//tColores color_select = intToColor(colorint);
    					//System.out.println(secuenciaColores[h]);
    					
    					if (comprobarColor(h, color_select) == true) {
    						//System.out.println("correcto");
    						if (h >= nivel - 1 ) {
    							i++;
    						}
    					}
    				}	
    			}while(i <  secuenciaColores.length - 1 && comprobarColor(i, secuenciaColores[i])); //AND COMBROBAR COLOOR RETURN TRUE
    			
    			System.out.println("Congratulations :D. You won the game");
    			System.out.println("Press ENTER to go to the menu.");
    			scn.nextLine();
    			mostrarMenu(0);
	  }
}
